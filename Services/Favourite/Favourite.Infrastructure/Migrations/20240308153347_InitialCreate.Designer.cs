// <auto-generated />
using Favourite.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Favourite.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240308153347_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Favourite.Domain.Entities.FavouriteDetails", b =>
                {
                    b.Property<int>("FavouriteDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FavouriteDetailsId"));

                    b.Property<int>("FavouriteHeaderId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("FavouriteDetailsId");

                    b.HasIndex("FavouriteHeaderId");

                    b.ToTable("FavouriteDetails");
                });

            modelBuilder.Entity("Favourite.Domain.Entities.FavouriteHeader", b =>
                {
                    b.Property<int>("FavouriteHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FavouriteHeaderId"));

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("FavouriteHeaderId");

                    b.ToTable("FavouriteHeaders");
                });

            modelBuilder.Entity("Favourite.Domain.Entities.FavouriteDetails", b =>
                {
                    b.HasOne("Favourite.Domain.Entities.FavouriteHeader", "FavouriteHeader")
                        .WithMany()
                        .HasForeignKey("FavouriteHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FavouriteHeader");
                });
#pragma warning restore 612, 618
        }
    }
}
