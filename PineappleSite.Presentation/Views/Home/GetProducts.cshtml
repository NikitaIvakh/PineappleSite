@using PineappleSite.Presentation.Extecsions
@using PineappleSite.Presentation.Models.Paginated
@using PineappleSite.Presentation.Services.Products
@model PaginatedList<PineappleSite.Presentation.Models.Products.ProductViewModel>

@{
    ViewData["Title"] = "Продукция";
}

<style>
    .custom-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .pagination {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

    .pagination .page-item {
        margin: 0 5px;
    }

    .pagination .page-item.disabled span {
        color: #6c757d;
        pointer-events: none;
    }

    .pagination .page-item a,
    .pagination .page-item span {
        display: inline-block;
        padding: 5px 10px;
        color: #007bff;
        border: 1px solid #007bff;
        border-radius: 4px;
        text-decoration: none;
    }

    .pagination .page-item.active span {
        background-color: #007bff;
        color: #fff;
    }
</style>

<form>
    <div class="container">
        <div class="row">
            @{
                foreach (var product in Model)
                {
                    <div class="col-12 col-md-6 col-lg-4 d-flex align-items-stretch">
                        <div class="p-0 my-3 border rounded">
                            <div class="card d-flex flex-column h-100">
                                <h3 class="card-title text-black-50 text-center py-2">@product.Name</h3>
                                <img src="@product.ImageUrl" class="card-img-top custom-image">
                                <div class="card-body d-flex flex-column flex-fill">
                                    <p class="card-text">@Html.Raw(product.Description.Substring(0, Math.Min(product.Description.Length, 11)))...</p>
                                    <div class="d-flex justify-content-between py-2">
                                        <span class="badge bg-warning text-white p-2">@product.ProductCategory.GetDisplayName()</span>
                                        <span class="badge bg-warning text-white p-2">@product.Price Br</span>
                                    </div>
                                    <div class="row mt-auto mb-0">
                                        <div class="col">
                                            <a class="btn btn-primary" asp-controller="Home" asp-action="GetProductDetails" asp-route-id="@product.Id">Посмотреть детали</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            <div class="pagination">
                @if (Model.HasPreviosPage)
                {
                    <a asp-action="GetProducts"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       class="page-item">
                        <span>&laquo; Назад</span>
                    </a>
                }
                @if (Model.HasNextPage)
                {
                    <a asp-action="GetProducts"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       class="page-item">
                        <span>Вперед &raquo;</span>
                    </a>
                }
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}