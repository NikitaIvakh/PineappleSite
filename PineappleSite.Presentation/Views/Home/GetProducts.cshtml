@using PineappleSite.Presentation.Extecsions
@using PineappleSite.Presentation.Models.Paginated
@using PineappleSite.Presentation.Services.Products
@model PaginatedList<PineappleSite.Presentation.Models.Products.ProductViewModel>

@{
    ViewData["Title"] = "Продукты";
    <link rel="stylesheet" href="~/css/home/getProducts.css" asp-append-version="true"/>
}

<div class="col-12 form-text">
    <form asp-action="GetProducts" method="get">
        <div class="form-actions no-color">
            <p class="mb-0">
                <label for="searchProduct" style="color:white; font-size: 20px;">Поиск продукта:</label>
            </p>
            <div class="input-group mb-3">
                <input type="text" class="form-control" name="searchProduct" id="searchProduct" value="@ViewData["SearchProduct"]"/>
                <div class="input-group-append">
                    <button type="submit" class="btn btn-primary search-button">Поиск</button>
                    <button type="button" id="clearSearch" class="btn btn-secondary clear-button">Очистить</button>
                </div>
            </div>
        </div>
    </form>
</div>

<form>
    <div class="container">
        <div class="row">
            @{
                foreach (var product in Model)
                {
                    <div class="col-12 col-md-6 col-lg-4 d-flex align-items-stretch">
                        <div class="p-0 my-3 border rounded">
                            <div class="card d-flex flex-column h-100">
                                <h3 class="card-title text-black-50 text-center py-2">@product.Name</h3>
                                <img src="@product.ImageUrl" class="card-img-top custom-image">
                                <div class="card-body d-flex flex-column flex-fill">
                                    <p class="card-text">@Html.Raw(product.Description.Substring(0, Math.Min(product.Description.Length, 11)))...</p>
                                    <div class="d-flex justify-content-between py-2">
                                        <span class="badge bg-warning text-white p-2">@product.ProductCategory.GetDisplayName()</span>
                                        <span class="badge bg-warning text-white p-2">@product.Price Br</span>
                                    </div>
                                    <div class="row mt-auto mb-0">
                                        <div class="col">
                                            <a class="btn btn-primary" asp-controller="Home" asp-action="GetProductDetails" asp-route-id="@product.Id">Посмотреть детали</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            <div class="pagination">
                @if (Model.HasPreviosPage)
                {
                    <a asp-action="GetProducts"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       class="page-item">
                        <span>&laquo; Назад</span>
                    </a>
                }
                @if (Model.HasNextPage)
                {
                    <a asp-action="GetProducts"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       class="page-item">
                        <span>Вперед &raquo;</span>
                    </a>
                }
            </div>
        </div>
    </div>
</form>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="~/js/home/getProducts.js" asp-append-version="true"></script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}